[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Camilo Martinez",
    "section": "",
    "text": "Business Analytics Master’s Student | Data Enthusiast | Finance Passionate\nI am driven by a passion for learning and a deep curiosity about data. I believe numbers offer the clearest path to understanding reality, which is why I advocate for learning through data-driven insights. Originally from Colombia, I now live in New York, where I am pursuing a Master’s in Business Analytics. My focus lies in leveraging analytics to solve complex problems, particularly within the finance industry. I am excited to continue learning and growing in this field, and I am always looking for new opportunities to apply my skills and knowledge."
  },
  {
    "objectID": "Mini Projects/mp01.html",
    "href": "Mini Projects/mp01.html",
    "title": "Mini-Project #01: Fiscal Characteristics of Major US Public Transit Systems",
    "section": "",
    "text": "This project investigates the fiscal characteristics of major U.S. public transit systems using data from the National Transit Database (NTD). Our analysis focuses on fare revenues, operating expenses, vehicle miles traveled (VRM), and unlinked passenger trips (UPT) across various transit systems and modes. The goal is to evaluate system efficiency through metrics like farebox recovery, expenses per trip, and total trips taken, helping to identify top-performing agencies and modes."
  },
  {
    "objectID": "Mini Projects/mp01.html#quarto",
    "href": "Mini Projects/mp01.html#quarto",
    "title": "Untitled",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "Mini Projects/mp01.html#running-code",
    "href": "Mini Projects/mp01.html#running-code",
    "title": "Mini-Project #01: Fiscal Characteristics of Major US Public Transit Systems",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "Mini Projects/mp01.html#data-sources",
    "href": "Mini Projects/mp01.html#data-sources",
    "title": "Mini-Project #01: Fiscal Characteristics of Major US Public Transit Systems",
    "section": "Data Sources",
    "text": "Data Sources\nFor this project, we used data from the National Transit Database, because we want to evaluate farebox revenues, total number of trips, total number of vehicles miles traveled, and total revenues and expeses by souce, we would need the following datasets:\n\nThe 2022 Fares Revenues dataset.\nThe latest 2022 Operating Expenses dataset.\nThe Monthly Ridership dataset.\n\nNote: Take in consideration that our data may have some post-pandemic irregularities; however, we are not interested on long-term forecasts on this project.\nThe following code will download the data for you:\n\nif(!require(\"tidyverse\")) install.packages(\"tidyverse\")\n\n# Let's start with the Fare Revenue Dataset:\nlibrary(tidyverse)\n# Specify the file URL and destination file path\nurl &lt;- \"https://www.transit.dot.gov/sites/fta.dot.gov/files/2024-04/2022%20Fare%20Revenue.xlsx\"\ndestfile &lt;- \"2022_fare_revenue.xlsx\"\n\n# Check if the file exists, if not, download it\nif(!file.exists(destfile)){\n  # Try downloading using the \"curl\" method\n  download.file(url, destfile = destfile, quiet = FALSE, method = \"curl\")\n}\n\n# Rename the dataset, select the columns we need, and group by the columns we want to summarize:\n\nFARES &lt;- readxl::read_xlsx(\"2022_fare_revenue.xlsx\") |&gt;\n  select(-`State/Parent NTD ID`, \n         -`Reporter Type`,\n         -`Reporting Module`,\n         -`TOS`,\n         -`Passenger Paid Fares`,\n         -`Organization Paid Fares`) |&gt;\n  filter(`Expense Type` == \"Funds Earned During Period\") |&gt;\n  select(-`Expense Type`) |&gt;\n  group_by(`NTD ID`,       # Sum over different `TOS` for the same `Mode`\n           `Agency Name`,  # These are direct operated and sub-contracted \n           `Mode`) |&gt;      # of the same transit modality\n  # Not a big effect in most munis (significant DO\n  # tends to get rid of sub-contractors), but we'll sum\n  # to unify different passenger experiences\n  summarize(`Total Fares` = sum(`Total Fares`)) |&gt;\n  ungroup()\n\n# Next, expenses dataset:\n\nurl &lt;- \"https://data.transportation.gov/api/views/dkxx-zjd6/rows.csv?date=20231102&accessType=DOWNLOAD&bom=true&format=true\"\ndestfile &lt;- \"2022_expenses.csv\"\n\nif(!file.exists(\"2022_expenses.csv\")){\n  # This should work _in theory_ but in practice it's still a bit finicky\n  # If it doesn't work for you, download this file 'by hand' in your\n  # browser and save it as \"2022_expenses.csv\" in your project\n  # directory.\n  download.file(url, destfile=destfile, quiet=FALSE, method=\"curl\")\n}\n\n# Rename the dataset, select the columns we need, and group by the columns we want to summarize:\nEXPENSES &lt;- readr::read_csv(\"2022_expenses.csv\") |&gt;\n  select(`NTD ID`, \n         `Agency`,\n         `Total`, \n         `Mode`) |&gt;\n  mutate(`NTD ID` = as.integer(`NTD ID`)) |&gt;\n  rename(Expenses = Total) |&gt;\n  group_by(`NTD ID`, `Mode`) |&gt;\n  summarize(Expenses = sum(Expenses)) |&gt;\n  ungroup()\n\nFINANCIALS &lt;- inner_join(FARES, EXPENSES, join_by(`NTD ID`, `Mode`))\n\nNow, let’s download the Monthly Ridership dataset:\n\n# Monthly Transit Numbers\nlibrary(tidyverse)\nurl= \"https://www.transit.dot.gov/sites/fta.dot.gov/files/2024-09/July%202024%20Complete%20Monthly%20Ridership%20%28with%20adjustments%20and%20estimates%29_240903.xlsx\"\ndestfile=\"ridership.xlsx\"\nif(!file.exists(\"ridership.xlsx\")){\n    # This should work _in theory_ but in practice it's still a bit finicky\n    # If it doesn't work for you, download this file 'by hand' in your\n    # browser and save it as \"ridership.xlsx\" in your project\n    # directory.\n    download.file(url,destfile=destfile, quiet=FALSE, method=\"curl\")\n}\nTRIPS &lt;- readxl::read_xlsx(\"ridership.xlsx\", sheet=\"UPT\") |&gt;\n            filter(`Mode/Type of Service Status` == \"Active\") |&gt;\n            select(-`Legacy NTD ID`, \n                   -`Reporter Type`, \n                   -`Mode/Type of Service Status`, \n                   -`UACE CD`, \n                   -`TOS`) |&gt;\n            pivot_longer(-c(`NTD ID`:`3 Mode`), \n                            names_to=\"month\", \n                            values_to=\"UPT\") |&gt;\n            drop_na() |&gt;\n            mutate(month=my(month)) # Parse _m_onth _y_ear date specs\nMILES &lt;- readxl::read_xlsx(\"ridership.xlsx\", sheet=\"VRM\") |&gt;\n            filter(`Mode/Type of Service Status` == \"Active\") |&gt;\n            select(-`Legacy NTD ID`, \n                   -`Reporter Type`, \n                   -`Mode/Type of Service Status`, \n                   -`UACE CD`, \n                   -`TOS`) |&gt;\n            pivot_longer(-c(`NTD ID`:`3 Mode`), \n                            names_to=\"month\", \n                            values_to=\"VRM\") |&gt;\n            drop_na() |&gt;\n            group_by(`NTD ID`, `Agency`, `UZA Name`, \n                     `Mode`, `3 Mode`, month) |&gt;\n            summarize(VRM = sum(VRM)) |&gt;\n            ungroup() |&gt;\n            mutate(month=my(month)) # Parse _m_onth _y_ear date specs\n\nUSAGE &lt;- inner_join(TRIPS, MILES) |&gt;\n    mutate(`NTD ID` = as.integer(`NTD ID`))\n\nThe code above would crate a table as follows:\n\nif(!require(\"dplyr\")) install.packages(\"dplyr\")\nif(!require(\"DT\")) install.packages(\"DT\")\nlibrary(DT)\n\nsample_n(USAGE, 1000) |&gt; \n    mutate(month=as.character(month)) |&gt; \n    DT::datatable()"
  },
  {
    "objectID": "Mini Projects/mp01.html#improve-readibility",
    "href": "Mini Projects/mp01.html#improve-readibility",
    "title": "Mini-Project #01: Fiscal Characteristics of Major US Public Transit Systems",
    "section": "Improve Readibility",
    "text": "Improve Readibility\nWe can improve the readability of the table by adding some formatting options:\n\nWe want to change the name UZA Name to metro_area.(Task 1)\n\n\nUSAGE &lt;- USAGE |&gt;\n    rename(metro_area = `UZA Name`)\n\n\nWe want to change the name of the unique Mode codes in our dataset function. First, I’ll check all the codes with the distinct function. Then, remplace the codes with the corresponding mode names.\n\n\nif(!require(\"gt\")) install.packages(\"gt\")\nlibrary(gt)\n\nunique_modes &lt;- USAGE |&gt; distinct(Mode)\n\n# Display the modes using gt for a well-formatted table\ngt(unique_modes) |&gt; \n  tab_header(title = \"Unique Modes in USAGE Dataset\")\n\n\n\n\n\n\n\nUnique Modes in USAGE Dataset\n\n\nMode\n\n\n\n\nDR\n\n\nFB\n\n\nMB\n\n\nSR\n\n\nTB\n\n\nVP\n\n\nCB\n\n\nRB\n\n\nLR\n\n\nYR\n\n\nMG\n\n\nCR\n\n\nAR\n\n\nTR\n\n\nHR\n\n\nIP\n\n\nPB\n\n\nCC\n\n\n\n\n\n\n\nThen I’LL replace the codes with the corresponding mode names:(Task 2)\n\nUSAGE &lt;- USAGE |&gt;\n  mutate(Mode = case_when(\n    Mode == \"HR\" ~ \"Heavy Rail\", \n    Mode == \"DR\" ~ \"Demand Response\",\n    Mode == \"FB\" ~ \"Ferryboat\",\n    Mode == \"MB\" ~ \"Motorbus\",\n    Mode == \"SR\" ~ \"Streetcar Rail\",\n    Mode == \"TB\" ~ \"Trolleybus\",\n    Mode == \"VP\" ~ \"Vanpool\",\n    Mode == \"CB\" ~ \"Commuter Bus\",\n    Mode == \"RB\" ~ \"Rapid Bus\",\n    Mode == \"LR\" ~ \"Light Rail\",\n    Mode == \"YR\" ~ \"Hybrid Rail\",\n    Mode == \"MG\" ~ \"Monorail/Automated Guideway\",\n    Mode == \"CR\" ~ \"Commuter Rail\",\n    Mode == \"AR\" ~ \"Aerial Tramway\",\n    Mode == \"TR\" ~ \"Trackless Trolley\",\n    Mode == \"IP\" ~ \"Inclined Plane\",\n    Mode == \"PB\" ~ \"Publico\",\n    Mode == \"CC\" ~ \"Cable Car\",\n    TRUE ~ \"Unknown\"  # For any unrecognized Mode codes\n  ))\n\nNow, we’ll check the table again to see the changes:\n\nif(!require(\"DT\")) install.packages(\"DT\")\nlibrary(DT)\n\nsample_n(USAGE, 1000) |&gt; \n    mutate(month=as.character(month)) |&gt; \n    DT::datatable()\n\n\n\n\n\nNow, It looks a little better; but we want to polish it even more. Therefore we are changing: -NTD ID to Transit_ID -3 Mode to Service_Mode -UPT to Passenger_Trips -VRM to Vehicle_Miles\n\nlibrary(dplyr)\n\n#| echo: true\n#| message: false\n#| warning: false\n# Rename the columns with more specific names\nUSAGE &lt;- USAGE |&gt;\n  rename(\n    Transit_ID = `NTD ID`,    \n    Service_Mode = `3 Mode`,    \n    Passenger_Trips = UPT,       \n    Vehicle_Miles = VRM          \n  )\n\n\nif(!require(\"DT\")) install.packages(\"DT\")\nlibrary(DT)\n\nsample_n(USAGE, 1000) |&gt; \n    mutate(month=as.character(month)) |&gt; \n    DT::datatable()\n\n\n\n\n\nNow, we can proceed to the analysis of the data, based on specific question:(Task 3)\n\nWhat transit agency had the most total VRM in our data set?\n\n\nUsage_by_agency &lt;- USAGE |&gt;\n  group_by(Agency) |&gt;\n  summarize(Total_VRM = sum(Vehicle_Miles)) |&gt;\n  arrange(desc(Total_VRM))|&gt;\n  head(1)\n\ngt(Usage_by_agency) |&gt;\n  tab_header(title = \"Usage by Agency\")\n\n\n\n\n\n\n\nUsage by Agency\n\n\nAgency\nTotal_VRM\n\n\n\n\nMTA New York City Transit\n10832855350\n\n\n\n\n\n\n\n2.What transit mode had the most total VRM in our data set?\n\nUsage_by_mode &lt;- USAGE |&gt;\n  group_by(Mode) |&gt;\n  summarize(Total_VRM = sum(Vehicle_Miles)) |&gt;\n  arrange(desc(Total_VRM))|&gt; \n  head(1)\n\ngt(Usage_by_mode) |&gt; \n  tab_header(title = \"Usage by Mode\")\n\n\n\n\n\n\n\nUsage by Mode\n\n\nMode\nTotal_VRM\n\n\n\n\nMotorbus\n49444494088\n\n\n\n\n\n\n\n\nHow many trips were taken on the NYC Subway (Heavy Rail) in May 2024?\n\n\nlibrary(dplyr)\nlibrary(gt)\n\n# Ensure the 'month' column is in Date format\nUSAGE &lt;- USAGE |&gt; \n  mutate(month = as.Date(month, format = \"%Y-%m-%d\"))  # Convert 'month' to Date format\n\n# Filter the dataset and calculate total trips for NYC Subway in May 2024\nNYC_Subway &lt;- USAGE |&gt;\n  filter(metro_area == \"New York--Jersey City--Newark, NY--NJ\", \n         Mode == \"Heavy Rail\", \n         format(month, \"%Y-%m\") == \"2024-05\") |&gt;  # Filter for May 2024\n  summarize(Total_Trips = sum(Passenger_Trips))\n\n# Display the result using gt\nNYC_Subway |&gt;\n  gt() |&gt;\n  tab_header(title = \"NYC Subway (Heavy Rail) Trips in May 2024\")\n\n\n\n\n\n\n\nNYC Subway (Heavy Rail) Trips in May 2024\n\n\nTotal_Trips\n\n\n\n\n186478364\n\n\n\n\n\n\n\n\nHow much did NYC subway ridership fall between April 2019 and April 2020?\n\n\n# Filter and summarize ridership for April 2019\nridership_april_2019 &lt;- USAGE |&gt;\n  filter(metro_area == \"New York--Jersey City--Newark, NY--NJ\", \n         Mode == \"Heavy Rail\", \n         format(month, \"%Y-%m\") == \"2019-04\") |&gt;\n  summarize(Total_Trips_2019 = sum(Passenger_Trips))\n\n# Filter and summarize ridership for April 2020\nridership_april_2020 &lt;- USAGE |&gt;\n  filter(metro_area == \"New York--Jersey City--Newark, NY--NJ\", \n         Mode == \"Heavy Rail\", \n         format(month, \"%Y-%m\") == \"2020-04\") |&gt;\n  summarize(Total_Trips_2020 = sum(Passenger_Trips))\n\n# Calculate the fall in ridership\nridership_fall &lt;- ridership_april_2019$Total_Trips_2019 - ridership_april_2020$Total_Trips_2020\n\n# Display the result using gt\ndata.frame(\n  Year = c(\"April 2019\", \"April 2020\", \"Difference\"),\n  Total_Trips = c(ridership_april_2019$Total_Trips_2019, \n                  ridership_april_2020$Total_Trips_2020, \n                  ridership_fall)\n) |&gt;\n  gt() |&gt;\n  tab_header(title = \"NYC Subway Ridership Fall between April 2019 and April 2020\")\n\n\n\n\n\n\n\nNYC Subway Ridership Fall between April 2019 and April 2020\n\n\nYear\nTotal_Trips\n\n\n\n\nApril 2019\n240655437\n\n\nApril 2020\n20704824\n\n\nDifference\n219950613\n\n\n\n\n\n\n\nNow we can Add 3 more interesting transit facts (Task 4)\n\nTop 5 Agencies with the Highest Average Passenger Trips per Month\n\n\ntop_agencies_by_trips &lt;- USAGE |&gt;\n  group_by(Agency) |&gt;\n  summarize(Average_Trips = mean(Passenger_Trips, na.rm = TRUE)) |&gt;\n  arrange(desc(Average_Trips)) |&gt;\n  head(5)\n\ntop_agencies_by_trips |&gt; \n  gt() |&gt;\n  tab_header(title = \"Top 5 Agencies by Average Passenger Trips per Month\")\n\n\n\n\n\n\n\nTop 5 Agencies by Average Passenger Trips per Month\n\n\nAgency\nAverage_Trips\n\n\n\n\nMTA New York City Transit\n61974646\n\n\nChicago Transit Authority\n18646042\n\n\nWashington Metropolitan Area Transit Authority\n9837529\n\n\nMTA Bus Company\n9654000\n\n\nMTA Long Island Rail Road\n7778194\n\n\n\n\n\n\n\n\nTop 5 Agencies with the Longest Total Vehicle Miles\n\n\ntop_agencies_by_miles_2020 &lt;- USAGE |&gt;\n  filter(format(month, \"%Y\") == \"2020\") |&gt;\n  group_by(Agency) |&gt;\n  summarize(Total_Miles = sum(Vehicle_Miles, na.rm = TRUE)) |&gt;\n  arrange(desc(Total_Miles)) |&gt;\n  head(5)\n\n# Display the result using gt\ntop_agencies_by_miles_2020 |&gt; \n  gt() |&gt;\n  tab_header(title = \"Top 5 Agencies with the Longest Total Vehicle Miles in 2020\")\n\n\n\n\n\n\n\nTop 5 Agencies with the Longest Total Vehicle Miles in 2020\n\n\nAgency\nTotal_Miles\n\n\n\n\nMTA New York City Transit\n440795169\n\n\nNew Jersey Transit Corporation\n222304731\n\n\nLos Angeles County Metropolitan Transportation Authority\n155868839\n\n\nChicago Transit Authority\n118789118\n\n\nSoutheastern Pennsylvania Transportation Authority\n110215177\n\n\n\n\n\n\n\n\nTop 5 service modes with the highest average passenger trips per month\n\n\ntop_modes_by_trips &lt;- USAGE |&gt;\n  group_by(Mode) |&gt;\n  summarize(Average_Trips = mean(Passenger_Trips, na.rm = TRUE)) |&gt;\n  arrange(desc(Average_Trips)) |&gt;\n  head(5)\n\ntop_modes_by_trips |&gt;\n  gt() |&gt;\n  tab_header(title = \"Top 3 Service Modes by Average Passenger Trips per Month\")\n\n\n\n\n\n\n\nTop 3 Service Modes by Average Passenger Trips per Month\n\n\nMode\nAverage_Trips\n\n\n\n\nHeavy Rail\n18314953\n\n\nPublico\n1912332\n\n\nTrolleybus\n1852404\n\n\nCommuter Rail\n1517074\n\n\nLight Rail\n1480087\n\n\n\n\n\n\n\nNow, we want to unify the two datasets to analyze the financials of the usage.(Task 5)’ To do that, we will have to merge the FINANCIALS and USAGE datasets on the NTD ID and Mode columns. First, we need create a new table, taking in consideration the sum total of UPT (Passager_Trips) and VRM (Vehicle_miles) for 2022.\n\nUSAGE_2022_ANNUAL &lt;- USAGE |&gt;\n  filter(format(month, \"%Y\") == \"2022\") |&gt;  # Filter for 2022 data\n  group_by(Transit_ID, Agency, metro_area, Mode) |&gt;  # Group by key columns\n  summarize(\n    Total_UPT = sum(Passenger_Trips, na.rm = TRUE),  # Sum UPT for 2022\n    Total_VRM = sum(Vehicle_Miles, na.rm = TRUE)     # Sum VRM for 2022\n  ) |&gt; \n  rename(`NTD ID` = Transit_ID) |&gt;  # Correct syntax for renaming\n  ungroup()  # Ungroup after summarizing\n\n`summarise()` has grouped output by 'Transit_ID', 'Agency', 'metro_area'. You\ncan override using the `.groups` argument.\n\n# Display the first 5 rows of the resulting table\nUSAGE_2022_ANNUAL |&gt; \n  head(5) |&gt; \n  gt() |&gt;\n  tab_header(\n    title = \"Usage Data for 2022 (First 5 Rows)\"\n  )\n\n\n\n\n\n\n\nUsage Data for 2022 (First 5 Rows)\n\n\nNTD ID\nAgency\nmetro_area\nMode\nTotal_UPT\nTotal_VRM\n\n\n\n\n1\nKing County\nSeattle--Tacoma, WA\nDemand Response\n663009\n12860448\n\n\n1\nKing County\nSeattle--Tacoma, WA\nFerryboat\n400407\n51236\n\n\n1\nKing County\nSeattle--Tacoma, WA\nMotorbus\n53983641\n61632644\n\n\n1\nKing County\nSeattle--Tacoma, WA\nStreetcar Rail\n1117605\n180369\n\n\n1\nKing County\nSeattle--Tacoma, WA\nTrolleybus\n9575043\n2635705\n\n\n\n\n\n\n\nWe have to make sure that Mode has the same format in both datasets before merging them. We will use the same code as before to standardize the Mode column in the FINANCIALS dataset.\n\nFINANCIALS &lt;- FINANCIALS |&gt;\n  mutate(Mode = case_when(\n    Mode == \"HR\" ~ \"Heavy Rail\", \n    Mode == \"DR\" ~ \"Demand Response\",\n    Mode == \"FB\" ~ \"Ferryboat\",\n    Mode == \"MB\" ~ \"Motorbus\",\n    Mode == \"SR\" ~ \"Streetcar Rail\",\n    Mode == \"TB\" ~ \"Trolleybus\",\n    Mode == \"VP\" ~ \"Vanpool\",\n    Mode == \"CB\" ~ \"Commuter Bus\",\n    Mode == \"RB\" ~ \"Rapid Bus\",\n    Mode == \"LR\" ~ \"Light Rail\",\n    Mode == \"YR\" ~ \"Hybrid Rail\",\n    Mode == \"MG\" ~ \"Monorail/Automated Guideway\",\n    Mode == \"CR\" ~ \"Commuter Rail\",\n    Mode == \"AR\" ~ \"Aerial Tramway\",\n    Mode == \"TR\" ~ \"Trackless Trolley\",\n    Mode == \"IP\" ~ \"Inclined Plane\",\n    Mode == \"PB\" ~ \"Publico\",\n    Mode == \"CC\" ~ \"Cable Car\",\n    TRUE ~ \"Unknown\"  # For any unrecognized Mode codes\n  ))\n\n\nFINANCIALS |&gt; \n  head(10) |&gt;  # Display the first 10 rows\n  gt() |&gt;\n  tab_header(\n    title = \"Usage and Financial Data for 2022 (First 10 Rows)\"\n  )\n\n\n\n\n\n\n\nUsage and Financial Data for 2022 (First 10 Rows)\n\n\nNTD ID\nAgency Name\nMode\nTotal Fares\nExpenses\n\n\n\n\n1\nKing County Department of Metro Transit\nCommuter Bus\n5216912\n0\n\n\n1\nKing County Department of Metro Transit\nDemand Response\n832327\n60540676\n\n\n1\nKing County Department of Metro Transit\nFerryboat\n1715265\n8899659\n\n\n1\nKing County Department of Metro Transit\nLight Rail\n29386480\n0\n\n\n1\nKing County Department of Metro Transit\nMotorbus\n56846337\n671653000\n\n\n1\nKing County Department of Metro Transit\nStreetcar Rail\n588495\n12511637\n\n\n1\nKing County Department of Metro Transit\nTrolleybus\n10123486\n84198937\n\n\n1\nKing County Department of Metro Transit\nVanpool\n5484481\n8908529\n\n\n2\nSpokane Transit Authority\nDemand Response\n531284\n17950502\n\n\n2\nSpokane Transit Authority\nMotorbus\n6135110\n75287455\n\n\n\n\n\n\n\nOnce we have the USAGE_2022_ANNUAL dataset, we can merge it with the FINANCIALS dataset to create a new dataset that includes both financial and usage data for 2022.\n\nUSAGE_AND_FINANCIALS &lt;- left_join(USAGE_2022_ANNUAL, \n           FINANCIALS, \n           join_by(`NTD ID`, Mode)) |&gt;\n   drop_na()\n\nUSAGE_AND_FINANCIALS |&gt;\n  head(2) |&gt;  # Display the first 10 rows\n  gt() |&gt;\n  tab_header(\n    title = \"Usage and Financial Data for 2022\"\n  )\n\n\n\n\n\n\n\nUsage and Financial Data for 2022\n\n\nNTD ID\nAgency\nmetro_area\nMode\nTotal_UPT\nTotal_VRM\nAgency Name\nTotal Fares\nExpenses\n\n\n\n\n1\nKing County\nSeattle--Tacoma, WA\nDemand Response\n663009\n12860448\nKing County Department of Metro Transit\n832327\n60540676\n\n\n1\nKing County\nSeattle--Tacoma, WA\nFerryboat\n400407\n51236\nKing County Department of Metro Transit\n1715265\n8899659\n\n\n\n\n\n\n\nBased on this new dataset USAGE_AND_FINANCIALS we can answer the following questions: (Task 6)\n\nWhich transit system (agency and mode) had the most UPT in 2022?\n\n\n# Transit system with the most UPT in 2022\nmost_upt &lt;- USAGE_AND_FINANCIALS |&gt;\n  filter(Total_UPT &gt; 400000) |&gt;  # Restricting to major systems\n  arrange(desc(Total_UPT)) |&gt; \n  select(Agency, Mode, Total_UPT) |&gt; \n  head(1)\n\nmost_upt |&gt;\n  gt() |&gt; \n  tab_header(title = \"Transit System with the Most UPT in 2022\")\n\n\n\n\n\n\n\nTransit System with the Most UPT in 2022\n\n\nAgency\nMode\nTotal_UPT\n\n\n\n\nMTA New York City Transit\nHeavy Rail\n1793073801\n\n\n\n\n\n\n\n\nWhich transit system (agency and mode) had the highest farebox recovery (Total Fares / Expenses)?\n\n\n# Transit system with the highest farebox recovery\nhighest_farebox_recovery &lt;- USAGE_AND_FINANCIALS |&gt;\n  filter(Total_UPT &gt; 400000) |&gt;  # Restricting to major systems\n  mutate(Farebox_Recovery = `Total Fares` / Expenses) |&gt;\n  arrange(desc(Farebox_Recovery)) |&gt; \n  select(Agency, Mode, Farebox_Recovery) |&gt; \n  head(1)\n\nhighest_farebox_recovery |&gt;\n  gt() |&gt; \n  tab_header(title = \"Transit System with the Highest Farebox Recovery in 2022\")\n\n\n\n\n\n\n\nTransit System with the Highest Farebox Recovery in 2022\n\n\nAgency\nMode\nFarebox_Recovery\n\n\n\n\nPort Imperial Ferry Corporation\nFerryboat\n1.428146\n\n\n\n\n\n\n\n\nWhich transit system (agency and mode) has the lowest expenses per UPT?\n\n\n# Transit system with the lowest expenses per UPT\nlowest_expenses_per_upt &lt;- USAGE_AND_FINANCIALS |&gt;\n  filter(Total_UPT &gt; 400000) |&gt;  # Restricting to major systems\n  mutate(Expenses_per_UPT = Expenses / Total_UPT) |&gt;\n  arrange(Expenses_per_UPT) |&gt; \n  select(Agency, Mode, Expenses_per_UPT) |&gt; \n  head(1)\n\nlowest_expenses_per_upt |&gt;\n  gt() |&gt; \n  tab_header(title = \"Transit System with the Lowest Expenses per UPT in 2022\")\n\n\n\n\n\n\n\nTransit System with the Lowest Expenses per UPT in 2022\n\n\nAgency\nMode\nExpenses_per_UPT\n\n\n\n\nNorth Carolina State University\nMotorbus\n1.17912\n\n\n\n\n\n\n\n\nWhich transit system (agency and mode) has the highest total fares per UPT?\n\n\n# Transit system with the highest total fares per UPT\nhighest_fares_per_upt &lt;- USAGE_AND_FINANCIALS |&gt;\n  filter(Total_UPT &gt; 400000) |&gt;  # Restricting to major systems\n  mutate(Fares_per_UPT = `Total Fares` / Total_UPT) |&gt;\n  arrange(desc(Fares_per_UPT)) |&gt; \n  select(Agency, Mode, Fares_per_UPT) |&gt; \n  head(1)\n\nhighest_fares_per_upt |&gt;\n  gt() |&gt; \n  tab_header(title = \"Transit System with the Highest Total Fares per UPT in 2022\")\n\n\n\n\n\n\n\nTransit System with the Highest Total Fares per UPT in 2022\n\n\nAgency\nMode\nFares_per_UPT\n\n\n\n\nHampton Jitney, Inc.\nCommuter Bus\n41.29628\n\n\n\n\n\n\n\n\nWhich transit system (agency and mode) has the lowest expenses per VRM?\n\n\n# Transit system with the lowest expenses per VRM\nlowest_expenses_per_vrm &lt;- USAGE_AND_FINANCIALS |&gt;\n  filter(Total_UPT &gt; 400000) |&gt;  # Restricting to major systems\n  mutate(Expenses_per_VRM = Expenses / Total_VRM) |&gt;\n  arrange(Expenses_per_VRM) |&gt; \n  select(Agency, Mode, Expenses_per_VRM) |&gt; \n  head(1)\n\nlowest_expenses_per_vrm |&gt;\n  gt() |&gt; \n  tab_header(title = \"Transit System with the Lowest Expenses per VRM in 2022\")\n\n\n\n\n\n\n\nTransit System with the Lowest Expenses per VRM in 2022\n\n\nAgency\nMode\nExpenses_per_VRM\n\n\n\n\nMetropolitan Transportation Commission\nVanpool\n0.4449998\n\n\n\n\n\n\n\n\nWhich transit system (agency and mode) has the highest total fares per VRM?\n\n\n# Transit system with the highest total fares per VRM\nhighest_fares_per_vrm &lt;- USAGE_AND_FINANCIALS |&gt;\n  filter(Total_UPT &gt; 400000) |&gt;  # Restricting to major systems\n  mutate(Fares_per_VRM = `Total Fares` / Total_VRM) |&gt;\n  arrange(desc(Fares_per_VRM)) |&gt; \n  select(Agency, Mode, Fares_per_VRM) |&gt; \n  head(1)\n\nhighest_fares_per_vrm |&gt;\n  gt() |&gt; \n  tab_header(title = \"Transit System with the Highest Total Fares per VRM in 2022\")\n\n\n\n\n\n\n\nTransit System with the Highest Total Fares per VRM in 2022\n\n\nAgency\nMode\nFares_per_VRM\n\n\n\n\nJacksonville Transportation Authority\nFerryboat\n157.7002"
  },
  {
    "objectID": "Mini Projects/mp01.html#introduction",
    "href": "Mini Projects/mp01.html#introduction",
    "title": "Mini-Project #01: Fiscal Characteristics of Major US Public Transit Systems",
    "section": "",
    "text": "This project investigates the fiscal characteristics of major U.S. public transit systems using data from the National Transit Database (NTD). Our analysis focuses on fare revenues, operating expenses, vehicle miles traveled (VRM), and unlinked passenger trips (UPT) across various transit systems and modes. The goal is to evaluate system efficiency through metrics like farebox recovery, expenses per trip, and total trips taken, helping to identify top-performing agencies and modes."
  },
  {
    "objectID": "Mini Projects/mp01.html#conclusion",
    "href": "Mini Projects/mp01.html#conclusion",
    "title": "Mini-Project #01: Fiscal Characteristics of Major US Public Transit Systems",
    "section": "Conclusion",
    "text": "Conclusion\nBased on the analysis, the MTA New York transit system emerges as the most efficient in the country, particularly in terms of moving the largest number of people. With the highest Unlinked Passenger Trips (UPT) in 2022, MTA New York demonstrates its ability to serve a massive population efficiently. While other systems may perform better in terms of cost-efficiency or farebox recovery, MTA’s ability to transport more people than any other transit system makes it a clear leader in terms of operational scale."
  },
  {
    "objectID": "mp01.html",
    "href": "mp01.html",
    "title": "Mini-Project #01: Fiscal Characteristics of Major US Public Transit Systems",
    "section": "",
    "text": "This project investigates the fiscal characteristics of major U.S. public transit systems using data from the National Transit Database (NTD). Our analysis focuses on fare revenues, operating expenses, vehicle miles traveled (VRM), and unlinked passenger trips (UPT) across various transit systems and modes. The goal is to evaluate system efficiency through metrics like farebox recovery, expenses per trip, and total trips taken, helping to identify top-performing agencies and modes."
  },
  {
    "objectID": "mp01.html#introduction",
    "href": "mp01.html#introduction",
    "title": "Mini-Project #01: Fiscal Characteristics of Major US Public Transit Systems",
    "section": "",
    "text": "This project investigates the fiscal characteristics of major U.S. public transit systems using data from the National Transit Database (NTD). Our analysis focuses on fare revenues, operating expenses, vehicle miles traveled (VRM), and unlinked passenger trips (UPT) across various transit systems and modes. The goal is to evaluate system efficiency through metrics like farebox recovery, expenses per trip, and total trips taken, helping to identify top-performing agencies and modes."
  },
  {
    "objectID": "mp01.html#data-sources",
    "href": "mp01.html#data-sources",
    "title": "Mini-Project #01: Fiscal Characteristics of Major US Public Transit Systems",
    "section": "Data Sources",
    "text": "Data Sources\nFor this project, we used data from the National Transit Database, because we want to evaluate farebox revenues, total number of trips, total number of vehicles miles traveled, and total revenues and expeses by souce, we would need the following datasets:\n\nThe 2022 Fares Revenues dataset.\nThe latest 2022 Operating Expenses dataset.\nThe Monthly Ridership dataset.\n\nNote: Take in consideration that our data may have some post-pandemic irregularities; however, we are not interested on long-term forecasts on this project.\nThe following code will download the data for you:\n\nif(!require(\"tidyverse\")) install.packages(\"tidyverse\")\n\n# Let's start with the Fare Revenue Dataset:\nlibrary(tidyverse)\n# Specify the file URL and destination file path\nurl &lt;- \"https://www.transit.dot.gov/sites/fta.dot.gov/files/2024-04/2022%20Fare%20Revenue.xlsx\"\ndestfile &lt;- \"2022_fare_revenue.xlsx\"\n\n# Check if the file exists, if not, download it\nif(!file.exists(destfile)){\n  # Try downloading using the \"curl\" method\n  download.file(url, destfile = destfile, quiet = FALSE, method = \"curl\")\n}\n\n# Rename the dataset, select the columns we need, and group by the columns we want to summarize:\n\nFARES &lt;- readxl::read_xlsx(\"2022_fare_revenue.xlsx\") |&gt;\n  select(-`State/Parent NTD ID`, \n         -`Reporter Type`,\n         -`Reporting Module`,\n         -`TOS`,\n         -`Passenger Paid Fares`,\n         -`Organization Paid Fares`) |&gt;\n  filter(`Expense Type` == \"Funds Earned During Period\") |&gt;\n  select(-`Expense Type`) |&gt;\n  group_by(`NTD ID`,       # Sum over different `TOS` for the same `Mode`\n           `Agency Name`,  # These are direct operated and sub-contracted \n           `Mode`) |&gt;      # of the same transit modality\n  # Not a big effect in most munis (significant DO\n  # tends to get rid of sub-contractors), but we'll sum\n  # to unify different passenger experiences\n  summarize(`Total Fares` = sum(`Total Fares`)) |&gt;\n  ungroup()\n\n# Next, expenses dataset:\n\nurl &lt;- \"https://data.transportation.gov/api/views/dkxx-zjd6/rows.csv?date=20231102&accessType=DOWNLOAD&bom=true&format=true\"\ndestfile &lt;- \"2022_expenses.csv\"\n\nif(!file.exists(\"2022_expenses.csv\")){\n  # This should work _in theory_ but in practice it's still a bit finicky\n  # If it doesn't work for you, download this file 'by hand' in your\n  # browser and save it as \"2022_expenses.csv\" in your project\n  # directory.\n  download.file(url, destfile=destfile, quiet=FALSE, method=\"curl\")\n}\n\n# Rename the dataset, select the columns we need, and group by the columns we want to summarize:\nEXPENSES &lt;- readr::read_csv(\"2022_expenses.csv\") |&gt;\n  select(`NTD ID`, \n         `Agency`,\n         `Total`, \n         `Mode`) |&gt;\n  mutate(`NTD ID` = as.integer(`NTD ID`)) |&gt;\n  rename(Expenses = Total) |&gt;\n  group_by(`NTD ID`, `Mode`) |&gt;\n  summarize(Expenses = sum(Expenses)) |&gt;\n  ungroup()\n\nFINANCIALS &lt;- inner_join(FARES, EXPENSES, join_by(`NTD ID`, `Mode`))\n\nNow, let’s download the Monthly Ridership dataset:\n\n# Monthly Transit Numbers\nlibrary(tidyverse)\nurl= \"https://www.transit.dot.gov/sites/fta.dot.gov/files/2024-09/July%202024%20Complete%20Monthly%20Ridership%20%28with%20adjustments%20and%20estimates%29_240903.xlsx\"\ndestfile=\"ridership.xlsx\"\nif(!file.exists(\"ridership.xlsx\")){\n    # This should work _in theory_ but in practice it's still a bit finicky\n    # If it doesn't work for you, download this file 'by hand' in your\n    # browser and save it as \"ridership.xlsx\" in your project\n    # directory.\n    download.file(url,destfile=destfile, quiet=FALSE, method=\"curl\")\n}\nTRIPS &lt;- readxl::read_xlsx(\"ridership.xlsx\", sheet=\"UPT\") |&gt;\n            filter(`Mode/Type of Service Status` == \"Active\") |&gt;\n            select(-`Legacy NTD ID`, \n                   -`Reporter Type`, \n                   -`Mode/Type of Service Status`, \n                   -`UACE CD`, \n                   -`TOS`) |&gt;\n            pivot_longer(-c(`NTD ID`:`3 Mode`), \n                            names_to=\"month\", \n                            values_to=\"UPT\") |&gt;\n            drop_na() |&gt;\n            mutate(month=my(month)) # Parse _m_onth _y_ear date specs\nMILES &lt;- readxl::read_xlsx(\"ridership.xlsx\", sheet=\"VRM\") |&gt;\n            filter(`Mode/Type of Service Status` == \"Active\") |&gt;\n            select(-`Legacy NTD ID`, \n                   -`Reporter Type`, \n                   -`Mode/Type of Service Status`, \n                   -`UACE CD`, \n                   -`TOS`) |&gt;\n            pivot_longer(-c(`NTD ID`:`3 Mode`), \n                            names_to=\"month\", \n                            values_to=\"VRM\") |&gt;\n            drop_na() |&gt;\n            group_by(`NTD ID`, `Agency`, `UZA Name`, \n                     `Mode`, `3 Mode`, month) |&gt;\n            summarize(VRM = sum(VRM)) |&gt;\n            ungroup() |&gt;\n            mutate(month=my(month)) # Parse _m_onth _y_ear date specs\n\nUSAGE &lt;- inner_join(TRIPS, MILES) |&gt;\n    mutate(`NTD ID` = as.integer(`NTD ID`))\n\nThe code above would crate a table as follows:\n\nif(!require(\"dplyr\")) install.packages(\"dplyr\")\nif(!require(\"DT\")) install.packages(\"DT\")\nlibrary(DT)\n\nsample_n(USAGE, 1000) |&gt; \n    mutate(month=as.character(month)) |&gt; \n    DT::datatable()"
  },
  {
    "objectID": "mp01.html#improve-readibility",
    "href": "mp01.html#improve-readibility",
    "title": "Mini-Project #01: Fiscal Characteristics of Major US Public Transit Systems",
    "section": "Improve Readibility",
    "text": "Improve Readibility\nWe can improve the readability of the table by adding some formatting options:\n\nWe want to change the name UZA Name to metro_area.(Task 1)\n\n\nUSAGE &lt;- USAGE |&gt;\n    rename(metro_area = `UZA Name`)\n\n\nWe want to change the name of the unique Mode codes in our dataset function. First, I’ll check all the codes with the distinct function. Then, remplace the codes with the corresponding mode names.\n\n\nif(!require(\"gt\")) install.packages(\"gt\")\nlibrary(gt)\n\nunique_modes &lt;- USAGE |&gt; distinct(Mode)\n\n# Display the modes using gt for a well-formatted table\ngt(unique_modes) |&gt; \n  tab_header(title = \"Unique Modes in USAGE Dataset\")\n\n\n\n\n\n\n\nUnique Modes in USAGE Dataset\n\n\nMode\n\n\n\n\nDR\n\n\nFB\n\n\nMB\n\n\nSR\n\n\nTB\n\n\nVP\n\n\nCB\n\n\nRB\n\n\nLR\n\n\nYR\n\n\nMG\n\n\nCR\n\n\nAR\n\n\nTR\n\n\nHR\n\n\nIP\n\n\nPB\n\n\nCC\n\n\n\n\n\n\n\nThen I’LL replace the codes with the corresponding mode names:(Task 2)\n\nUSAGE &lt;- USAGE |&gt;\n  mutate(Mode = case_when(\n    Mode == \"HR\" ~ \"Heavy Rail\", \n    Mode == \"DR\" ~ \"Demand Response\",\n    Mode == \"FB\" ~ \"Ferryboat\",\n    Mode == \"MB\" ~ \"Motorbus\",\n    Mode == \"SR\" ~ \"Streetcar Rail\",\n    Mode == \"TB\" ~ \"Trolleybus\",\n    Mode == \"VP\" ~ \"Vanpool\",\n    Mode == \"CB\" ~ \"Commuter Bus\",\n    Mode == \"RB\" ~ \"Rapid Bus\",\n    Mode == \"LR\" ~ \"Light Rail\",\n    Mode == \"YR\" ~ \"Hybrid Rail\",\n    Mode == \"MG\" ~ \"Monorail/Automated Guideway\",\n    Mode == \"CR\" ~ \"Commuter Rail\",\n    Mode == \"AR\" ~ \"Aerial Tramway\",\n    Mode == \"TR\" ~ \"Trackless Trolley\",\n    Mode == \"IP\" ~ \"Inclined Plane\",\n    Mode == \"PB\" ~ \"Publico\",\n    Mode == \"CC\" ~ \"Cable Car\",\n    TRUE ~ \"Unknown\"  # For any unrecognized Mode codes\n  ))\n\nNow, we’ll check the table again to see the changes:\n\nif(!require(\"DT\")) install.packages(\"DT\")\nlibrary(DT)\n\nsample_n(USAGE, 1000) |&gt; \n    mutate(month=as.character(month)) |&gt; \n    DT::datatable()\n\n\n\n\n\nNow, It looks a little better; but we want to polish it even more. Therefore we are changing: -NTD ID to Transit_ID -3 Mode to Service_Mode -UPT to Passenger_Trips -VRM to Vehicle_Miles\n\nlibrary(dplyr)\n\n#| echo: true\n#| message: false\n#| warning: false\n# Rename the columns with more specific names\nUSAGE &lt;- USAGE |&gt;\n  rename(\n    Transit_ID = `NTD ID`,    \n    Service_Mode = `3 Mode`,    \n    Passenger_Trips = UPT,       \n    Vehicle_Miles = VRM          \n  )\n\n\nif(!require(\"DT\")) install.packages(\"DT\")\nlibrary(DT)\n\nsample_n(USAGE, 1000) |&gt; \n    mutate(month=as.character(month)) |&gt; \n    DT::datatable()\n\n\n\n\n\nNow, we can proceed to the analysis of the data, based on specific question:(Task 3)\n\nWhat transit agency had the most total VRM in our data set?\n\n\nUsage_by_agency &lt;- USAGE |&gt;\n  group_by(Agency) |&gt;\n  summarize(Total_VRM = sum(Vehicle_Miles)) |&gt;\n  arrange(desc(Total_VRM))|&gt;\n  head(1)\n\ngt(Usage_by_agency) |&gt;\n  tab_header(title = \"Usage by Agency\")\n\n\n\n\n\n\n\nUsage by Agency\n\n\nAgency\nTotal_VRM\n\n\n\n\nMTA New York City Transit\n10832855350\n\n\n\n\n\n\n\n2.What transit mode had the most total VRM in our data set?\n\nUsage_by_mode &lt;- USAGE |&gt;\n  group_by(Mode) |&gt;\n  summarize(Total_VRM = sum(Vehicle_Miles)) |&gt;\n  arrange(desc(Total_VRM))|&gt; \n  head(1)\n\ngt(Usage_by_mode) |&gt; \n  tab_header(title = \"Usage by Mode\")\n\n\n\n\n\n\n\nUsage by Mode\n\n\nMode\nTotal_VRM\n\n\n\n\nMotorbus\n49444494088\n\n\n\n\n\n\n\n\nHow many trips were taken on the NYC Subway (Heavy Rail) in May 2024?\n\n\nlibrary(dplyr)\nlibrary(gt)\n\n# Ensure the 'month' column is in Date format\nUSAGE &lt;- USAGE |&gt; \n  mutate(month = as.Date(month, format = \"%Y-%m-%d\"))  # Convert 'month' to Date format\n\n# Filter the dataset and calculate total trips for NYC Subway in May 2024\nNYC_Subway &lt;- USAGE |&gt;\n  filter(metro_area == \"New York--Jersey City--Newark, NY--NJ\", \n         Mode == \"Heavy Rail\", \n         format(month, \"%Y-%m\") == \"2024-05\") |&gt;  # Filter for May 2024\n  summarize(Total_Trips = sum(Passenger_Trips))\n\n# Display the result using gt\nNYC_Subway |&gt;\n  gt() |&gt;\n  tab_header(title = \"NYC Subway (Heavy Rail) Trips in May 2024\")\n\n\n\n\n\n\n\nNYC Subway (Heavy Rail) Trips in May 2024\n\n\nTotal_Trips\n\n\n\n\n186478364\n\n\n\n\n\n\n\n\nHow much did NYC subway ridership fall between April 2019 and April 2020?\n\n\n# Filter and summarize ridership for April 2019\nridership_april_2019 &lt;- USAGE |&gt;\n  filter(metro_area == \"New York--Jersey City--Newark, NY--NJ\", \n         Mode == \"Heavy Rail\", \n         format(month, \"%Y-%m\") == \"2019-04\") |&gt;\n  summarize(Total_Trips_2019 = sum(Passenger_Trips))\n\n# Filter and summarize ridership for April 2020\nridership_april_2020 &lt;- USAGE |&gt;\n  filter(metro_area == \"New York--Jersey City--Newark, NY--NJ\", \n         Mode == \"Heavy Rail\", \n         format(month, \"%Y-%m\") == \"2020-04\") |&gt;\n  summarize(Total_Trips_2020 = sum(Passenger_Trips))\n\n# Calculate the fall in ridership\nridership_fall &lt;- ridership_april_2019$Total_Trips_2019 - ridership_april_2020$Total_Trips_2020\n\n# Display the result using gt\ndata.frame(\n  Year = c(\"April 2019\", \"April 2020\", \"Difference\"),\n  Total_Trips = c(ridership_april_2019$Total_Trips_2019, \n                  ridership_april_2020$Total_Trips_2020, \n                  ridership_fall)\n) |&gt;\n  gt() |&gt;\n  tab_header(title = \"NYC Subway Ridership Fall between April 2019 and April 2020\")\n\n\n\n\n\n\n\nNYC Subway Ridership Fall between April 2019 and April 2020\n\n\nYear\nTotal_Trips\n\n\n\n\nApril 2019\n240655437\n\n\nApril 2020\n20704824\n\n\nDifference\n219950613\n\n\n\n\n\n\n\nNow we can Add 3 more interesting transit facts (Task 4)\n\nTop 5 Agencies with the Highest Average Passenger Trips per Month\n\n\ntop_agencies_by_trips &lt;- USAGE |&gt;\n  group_by(Agency) |&gt;\n  summarize(Average_Trips = mean(Passenger_Trips, na.rm = TRUE)) |&gt;\n  arrange(desc(Average_Trips)) |&gt;\n  head(5)\n\ntop_agencies_by_trips |&gt; \n  gt() |&gt;\n  tab_header(title = \"Top 5 Agencies by Average Passenger Trips per Month\")\n\n\n\n\n\n\n\nTop 5 Agencies by Average Passenger Trips per Month\n\n\nAgency\nAverage_Trips\n\n\n\n\nMTA New York City Transit\n61974646\n\n\nChicago Transit Authority\n18646042\n\n\nWashington Metropolitan Area Transit Authority\n9837529\n\n\nMTA Bus Company\n9654000\n\n\nMTA Long Island Rail Road\n7778194\n\n\n\n\n\n\n\n\nTop 5 Agencies with the Longest Total Vehicle Miles\n\n\ntop_agencies_by_miles_2020 &lt;- USAGE |&gt;\n  filter(format(month, \"%Y\") == \"2020\") |&gt;\n  group_by(Agency) |&gt;\n  summarize(Total_Miles = sum(Vehicle_Miles, na.rm = TRUE)) |&gt;\n  arrange(desc(Total_Miles)) |&gt;\n  head(5)\n\n# Display the result using gt\ntop_agencies_by_miles_2020 |&gt; \n  gt() |&gt;\n  tab_header(title = \"Top 5 Agencies with the Longest Total Vehicle Miles in 2020\")\n\n\n\n\n\n\n\nTop 5 Agencies with the Longest Total Vehicle Miles in 2020\n\n\nAgency\nTotal_Miles\n\n\n\n\nMTA New York City Transit\n440795169\n\n\nNew Jersey Transit Corporation\n222304731\n\n\nLos Angeles County Metropolitan Transportation Authority\n155868839\n\n\nChicago Transit Authority\n118789118\n\n\nSoutheastern Pennsylvania Transportation Authority\n110215177\n\n\n\n\n\n\n\n\nTop 5 service modes with the highest average passenger trips per month\n\n\ntop_modes_by_trips &lt;- USAGE |&gt;\n  group_by(Mode) |&gt;\n  summarize(Average_Trips = mean(Passenger_Trips, na.rm = TRUE)) |&gt;\n  arrange(desc(Average_Trips)) |&gt;\n  head(5)\n\ntop_modes_by_trips |&gt;\n  gt() |&gt;\n  tab_header(title = \"Top 3 Service Modes by Average Passenger Trips per Month\")\n\n\n\n\n\n\n\nTop 3 Service Modes by Average Passenger Trips per Month\n\n\nMode\nAverage_Trips\n\n\n\n\nHeavy Rail\n18314953\n\n\nPublico\n1912332\n\n\nTrolleybus\n1852404\n\n\nCommuter Rail\n1517074\n\n\nLight Rail\n1480087\n\n\n\n\n\n\n\nNow, we want to unify the two datasets to analyze the financials of the usage.(Task 5)’ To do that, we will have to merge the FINANCIALS and USAGE datasets on the NTD ID and Mode columns. First, we need create a new table, taking in consideration the sum total of UPT (Passager_Trips) and VRM (Vehicle_miles) for 2022.\n\nUSAGE_2022_ANNUAL &lt;- USAGE |&gt;\n  filter(format(month, \"%Y\") == \"2022\") |&gt;  # Filter for 2022 data\n  group_by(Transit_ID, Agency, metro_area, Mode) |&gt;  # Group by key columns\n  summarize(\n    Total_UPT = sum(Passenger_Trips, na.rm = TRUE),  # Sum UPT for 2022\n    Total_VRM = sum(Vehicle_Miles, na.rm = TRUE)     # Sum VRM for 2022\n  ) |&gt; \n  rename(`NTD ID` = Transit_ID) |&gt;  # Correct syntax for renaming\n  ungroup()  # Ungroup after summarizing\n\n`summarise()` has grouped output by 'Transit_ID', 'Agency', 'metro_area'. You\ncan override using the `.groups` argument.\n\n# Display the first 5 rows of the resulting table\nUSAGE_2022_ANNUAL |&gt; \n  head(5) |&gt; \n  gt() |&gt;\n  tab_header(\n    title = \"Usage Data for 2022 (First 5 Rows)\"\n  )\n\n\n\n\n\n\n\nUsage Data for 2022 (First 5 Rows)\n\n\nNTD ID\nAgency\nmetro_area\nMode\nTotal_UPT\nTotal_VRM\n\n\n\n\n1\nKing County\nSeattle--Tacoma, WA\nDemand Response\n663009\n12860448\n\n\n1\nKing County\nSeattle--Tacoma, WA\nFerryboat\n400407\n51236\n\n\n1\nKing County\nSeattle--Tacoma, WA\nMotorbus\n53983641\n61632644\n\n\n1\nKing County\nSeattle--Tacoma, WA\nStreetcar Rail\n1117605\n180369\n\n\n1\nKing County\nSeattle--Tacoma, WA\nTrolleybus\n9575043\n2635705\n\n\n\n\n\n\n\nWe have to make sure that Mode has the same format in both datasets before merging them. We will use the same code as before to standardize the Mode column in the FINANCIALS dataset.\n\nFINANCIALS &lt;- FINANCIALS |&gt;\n  mutate(Mode = case_when(\n    Mode == \"HR\" ~ \"Heavy Rail\", \n    Mode == \"DR\" ~ \"Demand Response\",\n    Mode == \"FB\" ~ \"Ferryboat\",\n    Mode == \"MB\" ~ \"Motorbus\",\n    Mode == \"SR\" ~ \"Streetcar Rail\",\n    Mode == \"TB\" ~ \"Trolleybus\",\n    Mode == \"VP\" ~ \"Vanpool\",\n    Mode == \"CB\" ~ \"Commuter Bus\",\n    Mode == \"RB\" ~ \"Rapid Bus\",\n    Mode == \"LR\" ~ \"Light Rail\",\n    Mode == \"YR\" ~ \"Hybrid Rail\",\n    Mode == \"MG\" ~ \"Monorail/Automated Guideway\",\n    Mode == \"CR\" ~ \"Commuter Rail\",\n    Mode == \"AR\" ~ \"Aerial Tramway\",\n    Mode == \"TR\" ~ \"Trackless Trolley\",\n    Mode == \"IP\" ~ \"Inclined Plane\",\n    Mode == \"PB\" ~ \"Publico\",\n    Mode == \"CC\" ~ \"Cable Car\",\n    TRUE ~ \"Unknown\"  # For any unrecognized Mode codes\n  ))\n\n\nFINANCIALS |&gt; \n  head(10) |&gt;  # Display the first 10 rows\n  gt() |&gt;\n  tab_header(\n    title = \"Usage and Financial Data for 2022 (First 10 Rows)\"\n  )\n\n\n\n\n\n\n\nUsage and Financial Data for 2022 (First 10 Rows)\n\n\nNTD ID\nAgency Name\nMode\nTotal Fares\nExpenses\n\n\n\n\n1\nKing County Department of Metro Transit\nCommuter Bus\n5216912\n0\n\n\n1\nKing County Department of Metro Transit\nDemand Response\n832327\n60540676\n\n\n1\nKing County Department of Metro Transit\nFerryboat\n1715265\n8899659\n\n\n1\nKing County Department of Metro Transit\nLight Rail\n29386480\n0\n\n\n1\nKing County Department of Metro Transit\nMotorbus\n56846337\n671653000\n\n\n1\nKing County Department of Metro Transit\nStreetcar Rail\n588495\n12511637\n\n\n1\nKing County Department of Metro Transit\nTrolleybus\n10123486\n84198937\n\n\n1\nKing County Department of Metro Transit\nVanpool\n5484481\n8908529\n\n\n2\nSpokane Transit Authority\nDemand Response\n531284\n17950502\n\n\n2\nSpokane Transit Authority\nMotorbus\n6135110\n75287455\n\n\n\n\n\n\n\nOnce we have the USAGE_2022_ANNUAL dataset, we can merge it with the FINANCIALS dataset to create a new dataset that includes both financial and usage data for 2022.\n\nUSAGE_AND_FINANCIALS &lt;- left_join(USAGE_2022_ANNUAL, \n           FINANCIALS, \n           join_by(`NTD ID`, Mode)) |&gt;\n   drop_na()\n\nUSAGE_AND_FINANCIALS |&gt;\n  head(2) |&gt;  # Display the first 10 rows\n  gt() |&gt;\n  tab_header(\n    title = \"Usage and Financial Data for 2022\"\n  )\n\n\n\n\n\n\n\nUsage and Financial Data for 2022\n\n\nNTD ID\nAgency\nmetro_area\nMode\nTotal_UPT\nTotal_VRM\nAgency Name\nTotal Fares\nExpenses\n\n\n\n\n1\nKing County\nSeattle--Tacoma, WA\nDemand Response\n663009\n12860448\nKing County Department of Metro Transit\n832327\n60540676\n\n\n1\nKing County\nSeattle--Tacoma, WA\nFerryboat\n400407\n51236\nKing County Department of Metro Transit\n1715265\n8899659\n\n\n\n\n\n\n\nBased on this new dataset USAGE_AND_FINANCIALS we can answer the following questions: (Task 6)\n\nWhich transit system (agency and mode) had the most UPT in 2022?\n\n\n# Transit system with the most UPT in 2022\nmost_upt &lt;- USAGE_AND_FINANCIALS |&gt;\n  filter(Total_UPT &gt; 400000) |&gt;  # Restricting to major systems\n  arrange(desc(Total_UPT)) |&gt; \n  select(Agency, Mode, Total_UPT) |&gt; \n  head(1)\n\nmost_upt |&gt;\n  gt() |&gt; \n  tab_header(title = \"Transit System with the Most UPT in 2022\")\n\n\n\n\n\n\n\nTransit System with the Most UPT in 2022\n\n\nAgency\nMode\nTotal_UPT\n\n\n\n\nMTA New York City Transit\nHeavy Rail\n1793073801\n\n\n\n\n\n\n\n\nWhich transit system (agency and mode) had the highest farebox recovery (Total Fares / Expenses)?\n\n\n# Transit system with the highest farebox recovery\nhighest_farebox_recovery &lt;- USAGE_AND_FINANCIALS |&gt;\n  filter(Total_UPT &gt; 400000) |&gt;  # Restricting to major systems\n  mutate(Farebox_Recovery = `Total Fares` / Expenses) |&gt;\n  arrange(desc(Farebox_Recovery)) |&gt; \n  select(Agency, Mode, Farebox_Recovery) |&gt; \n  head(1)\n\nhighest_farebox_recovery |&gt;\n  gt() |&gt; \n  tab_header(title = \"Transit System with the Highest Farebox Recovery in 2022\")\n\n\n\n\n\n\n\nTransit System with the Highest Farebox Recovery in 2022\n\n\nAgency\nMode\nFarebox_Recovery\n\n\n\n\nPort Imperial Ferry Corporation\nFerryboat\n1.428146\n\n\n\n\n\n\n\n\nWhich transit system (agency and mode) has the lowest expenses per UPT?\n\n\n# Transit system with the lowest expenses per UPT\nlowest_expenses_per_upt &lt;- USAGE_AND_FINANCIALS |&gt;\n  filter(Total_UPT &gt; 400000) |&gt;  # Restricting to major systems\n  mutate(Expenses_per_UPT = Expenses / Total_UPT) |&gt;\n  arrange(Expenses_per_UPT) |&gt; \n  select(Agency, Mode, Expenses_per_UPT) |&gt; \n  head(1)\n\nlowest_expenses_per_upt |&gt;\n  gt() |&gt; \n  tab_header(title = \"Transit System with the Lowest Expenses per UPT in 2022\")\n\n\n\n\n\n\n\nTransit System with the Lowest Expenses per UPT in 2022\n\n\nAgency\nMode\nExpenses_per_UPT\n\n\n\n\nNorth Carolina State University\nMotorbus\n1.17912\n\n\n\n\n\n\n\n\nWhich transit system (agency and mode) has the highest total fares per UPT?\n\n\n# Transit system with the highest total fares per UPT\nhighest_fares_per_upt &lt;- USAGE_AND_FINANCIALS |&gt;\n  filter(Total_UPT &gt; 400000) |&gt;  # Restricting to major systems\n  mutate(Fares_per_UPT = `Total Fares` / Total_UPT) |&gt;\n  arrange(desc(Fares_per_UPT)) |&gt; \n  select(Agency, Mode, Fares_per_UPT) |&gt; \n  head(1)\n\nhighest_fares_per_upt |&gt;\n  gt() |&gt; \n  tab_header(title = \"Transit System with the Highest Total Fares per UPT in 2022\")\n\n\n\n\n\n\n\nTransit System with the Highest Total Fares per UPT in 2022\n\n\nAgency\nMode\nFares_per_UPT\n\n\n\n\nHampton Jitney, Inc.\nCommuter Bus\n41.29628\n\n\n\n\n\n\n\n\nWhich transit system (agency and mode) has the lowest expenses per VRM?\n\n\n# Transit system with the lowest expenses per VRM\nlowest_expenses_per_vrm &lt;- USAGE_AND_FINANCIALS |&gt;\n  filter(Total_UPT &gt; 400000) |&gt;  # Restricting to major systems\n  mutate(Expenses_per_VRM = Expenses / Total_VRM) |&gt;\n  arrange(Expenses_per_VRM) |&gt; \n  select(Agency, Mode, Expenses_per_VRM) |&gt; \n  head(1)\n\nlowest_expenses_per_vrm |&gt;\n  gt() |&gt; \n  tab_header(title = \"Transit System with the Lowest Expenses per VRM in 2022\")\n\n\n\n\n\n\n\nTransit System with the Lowest Expenses per VRM in 2022\n\n\nAgency\nMode\nExpenses_per_VRM\n\n\n\n\nMetropolitan Transportation Commission\nVanpool\n0.4449998\n\n\n\n\n\n\n\n\nWhich transit system (agency and mode) has the highest total fares per VRM?\n\n\n# Transit system with the highest total fares per VRM\nhighest_fares_per_vrm &lt;- USAGE_AND_FINANCIALS |&gt;\n  filter(Total_UPT &gt; 400000) |&gt;  # Restricting to major systems\n  mutate(Fares_per_VRM = `Total Fares` / Total_VRM) |&gt;\n  arrange(desc(Fares_per_VRM)) |&gt; \n  select(Agency, Mode, Fares_per_VRM) |&gt; \n  head(1)\n\nhighest_fares_per_vrm |&gt;\n  gt() |&gt; \n  tab_header(title = \"Transit System with the Highest Total Fares per VRM in 2022\")\n\n\n\n\n\n\n\nTransit System with the Highest Total Fares per VRM in 2022\n\n\nAgency\nMode\nFares_per_VRM\n\n\n\n\nJacksonville Transportation Authority\nFerryboat\n157.7002"
  },
  {
    "objectID": "mp01.html#conclusion",
    "href": "mp01.html#conclusion",
    "title": "Mini-Project #01: Fiscal Characteristics of Major US Public Transit Systems",
    "section": "Conclusion",
    "text": "Conclusion\nBased on the analysis, the MTA New York transit system emerges as the most efficient in the country, particularly in terms of moving the largest number of people. With the highest Unlinked Passenger Trips (UPT) in 2022, MTA New York demonstrates its ability to serve a massive population efficiently. While other systems may perform better in terms of cost-efficiency or farebox recovery, MTA’s ability to transport more people than any other transit system makes it a clear leader in terms of operational scale."
  }
]